#####################################################################
# Uncrustify 配置文件 -- 自定义代码风格示例
#
# 说明：
#   本配置旨在达到如下风格特点：
#     1. 缩进使用 4 个空格，不使用 Tab。
#     2. 变量声明对齐（例如 int     foo;）。
#     3. 操作符两侧、逗号和分号两侧保留空格（例如 a , b , c , d）。
#     4. 函数声明时，将返回类型单独一行，函数名和参数列表另起一行，
#        参数列表中的每个参数换行缩进，并在左括号后换行。
#     5. 控制语句（if、for、do、while、switch 等）的大括号
#        均强制换行（即大括号单独占一行）。
#     6. switch 内部，case 标签缩进一级。
#
# 注意：
#   部分格式（例如“返回类型与函数名分行”）较为个性化，Uncrustify
#   内置选项可能不能完全满足，需要结合后处理或额外脚本来进一步调整。
#####################################################################

#### 1. 缩进设置 ####
indent_columns                 = 4         # 每级缩进 4 个空格
indent_with_tabs               = 0     # 不使用 Tab

#### 2. 变量声明对齐 ####
# 对齐变量声明中的标识符（例如将 int 和 foo 对齐）
align_var_decl               = true

#### 3. 操作符和标点符号周围空格 ####
# 逗号前后均加空格（注意：默认通常只加逗号后空格，此处要求逗号前也有空格）
sp_before_comma                = true
sp_after_comma                 = true

# 赋值运算符左右加空格
sp_before_assign               = true
sp_after_assign                = true

#### 4. 函数声明和定义格式 ####
# 使函数声明的返回类型与函数名分开，即返回类型后换行
nl_after_decl_type             = true
# 函数声明中，在左括号前换行（使参数列表独占多行）
nl_after_func_decl_open_paren  = true
# 函数声明中，右括号前不换行
nl_before_func_decl_close_paren = false
# 函数定义的大括号独占一行（即换行放置）
nl_brace_func_def              = force

#### 5. 控制语句和代码块的大括号格式 ####
# if 语句的大括号：单语句不强制加大括号，但多语句时大括号独占一行
nl_brace_if                  = force
nl_brace_else                = force

# for, while, do 等循环结构的大括号
nl_brace_for                 = force
nl_brace_while               = force
nl_brace_do                  = force

# switch 语句的大括号
nl_brace_switch              = force

#### 6. switch-case 内部缩进 ####
indent_switch_brace          = true    # switch 内大括号内部整体缩进
indent_case_labels           = true    # case 标签缩进一级

#### 7. 其他说明 ####
# 关于函数调用参数列表中各参数之间保留逗号前后的空格，
# Uncrustify 默认可能只处理逗号后空格，逗号前空格较为少见，
# 如有需要，可能需要借助额外脚本做进一步处理。

# 如有其它特殊需求，可继续添加或调整相应选项……
